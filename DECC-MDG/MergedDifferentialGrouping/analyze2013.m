% Author: Mohammad Nabi Omidvar
% email address: mn.omidvar AT gmail.com
% Modified by: Zhitao Huang
% Email: 2015160057@email.szu.edu.cn
%
% ------------
% Description:
% ------------
% This file is used to analyze the performance of the recursive 
% differential grouping algorithm on CEC'2013 benchmark problems.
% This program reads the data files generated by recursive differential 
% grouping and shows how many variables from each formed group
% are correctly identified and to which permutation group they
% belong.
%
%--------
% Inputs:
%--------
%    funs: a vector containing the functions ids the functions that you 
%          want to analyze.


function analyze2013()
    more off;
    funcs=1:15;
    % Number of non-separable groups for each function in CEC'2013 benchmark suite
    FEs_matrix=[];
    num_sep=[];
    num_nonsep=[];
    groups_nonsep=[];
    
    for f = funcs
        filename = sprintf('./results2013/F%02d.mat', f);
        load(filename);
        s=[];
        m=0;
        mat = zeros(length(nonseps), 20);
        drawline('=');
        fprintf('Function F: %02d\n', f);
        fprintf('FEs used: %d\n', FEs);
        fprintf('Number of separables variables: %d\n', length (seps));
        fprintf('Number of non-separables groups: %d\n', length (nonseps));
        FEs_matrix=[FEs_matrix;FEs];
        num_sep=[num_sep; length(seps)];
        groups_nonsep=[groups_nonsep;length(nonseps)];
    
        filename1 = sprintf('./cec2013/datafiles/f%02d.mat', f);
        filename2 = sprintf('./cec2013/datafiles/f%02d_opm.mat', f);
        flag = false;
        if(exist(filename1))
            load(filename1);
            flag = true;
        elseif(exist(filename2))
            load(filename2);
            flag = true;
        end
       
        printheader();

        for i=[1:1:length(nonseps)]
            fprintf('Size of G%02d: %3d  |  ', i, length (nonseps{i}));
            if(flag)
                ldim = 1;
                for g=1:length(s)
                    captured = length(intersect(p(ldim:ldim+s(g)-1), nonseps{i}));
                    ldim=ldim+s(g)-m;
                    fprintf(' %4d', captured);
                    mat(i, g) = captured;
                end
            end
            fprintf('\n');
        end

        mat2 = mat;
        [temp I] = max(mat, [], 1);
        [sorted II] = sort(temp, 'descend');
        masks = zeros(size(mat));
        for k = 1:min(size(mat))
            mask = zeros(1, length(sorted));
            mask(II(k)) = 1;
            if(sorted(k)~=0)
                masks(I(II(k)), :) = mask;
                mat(I(II(k)), :) = mat(I(II(k)), :) .* mask;
            end
            [temp I] = max(mat, [], 1);
            [sorted II] = sort(temp, 'descend');
        end
        mat = mat2 .* masks;
        [temp I] = max(mat, [], 1);
        if(ismember(f, [12 13 14 15]))
            gsizes = cellfun('length', nonseps);
            fprintf('Number of non-separable variables correctly grouped: %d\n', max(gsizes));
            num_nonsep=[num_nonsep;max(gsizes)];
        else
            fprintf('Number of non-separable variables correctly grouped: %d\n', sum(temp(1:length(s))));
            num_nonsep=[num_nonsep;sum(temp(1:length(s)))];
        end
        drawline('=');
        pause;
    end

    dims=1000*ones(15,1);
    dims([13,14])=905;
    var_nonsep=[0 0 0 300 300 300 300 1000 1000 1000 1000 1000 905 905 1000];
    overall_acc=[];
    sep_acc=[];
    nonsep_group_acc=[];
    for i=1:15
        if(num_sep(i)<(dims(i)-var_nonsep(i)))
            real_sep=num_sep(i);
        else
            real_sep=(dims(i)-var_nonsep(i));
        end
        if(i<=3)
            acc=num_sep(i)/dims(i);
            s_acc=num2str(acc,'%.4f');
            n_acc="-";
        elseif(i>=8)
            acc=num_nonsep(i)/dims(i);
            n_acc=num2str(acc,'%.4f');
            s_acc="-";
        else
            acc=(num_nonsep(i)+real_sep)/dims(i);
            s_acc=num2str(real_sep/(dims(i)-var_nonsep(i)),'%.4f');
            n_acc=num2str(num_nonsep(i)/var_nonsep(i),'%.4f');
        end
        sep_acc=[sep_acc;s_acc];
        nonsep_group_acc=[nonsep_group_acc;n_acc];
        overall_acc=[overall_acc;acc];  
    end
    
    %cec'2013
    xlswrite('results_2013.xlsx',[1:15]','A1:A15');
    xlswrite('results_2013.xlsx',FEs_matrix,'B1:B15');
    xlswrite('results_2013.xlsx',sep_acc,'C1:C15');
    xlswrite('results_2013.xlsx',nonsep_group_acc,'D11:D15');
    xlswrite('results_2013.xlsx',overall_acc,'E1:E15');
end


% Helper Functions ----------------------------------------------------------
function drawline(c)
    for i=1:121
        fprintf(1,c);
    end
    fprintf('\n')
end

function printheader()
    fprintf('Permutation Groups|');
    for i=1:20
        fprintf(' %4s', sprintf('P%d', i));
    end 
    fprintf('\n')
    drawline('-');
end
% End Helper Functions ------------------------------------------------------
